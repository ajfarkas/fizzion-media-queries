/*!
 * Fizzion Typography v0.0.1
 * Copyright 2018 Alex Lemanski
 * Licensed under MIT
 *   (https://github.com/fizzion/fizzion-media-queries/blob/master/LICENSE.md)
 */

$breakpoints: ('sm': 719, 'md': 1024) !default;

@mixin mq-only($breakpoint) {
  $mq-rules: null !default;
  @if $breakpoint == 'sm' {
    $mq-rules: '(max-width: #{map-get($breakpoints, $breakpoint) + px})';
  } @else if $breakpoint == 'md' {
    $mq-rules: '(min-width: #{map-get($breakpoints, 'sm') + 1px})
      and (max-width: #{map-get($breakpoints, $breakpoint) + px})';
  } @else if $breakpoint == 'lg' {
    $mq-rules: '(min-width: #{map-get($breakpoints, 'md') + 1px})';
  }

  @media #{$mq-rules} {
    @content;
  }
}

@mixin mq-greater-than($breakpoint) {
  @media (min-width: map-get($breakpoints, $breakpoint) + 1px) {
    @content;
  }
}

@mixin mq-smaller-than($breakpoint) {
  @if $breakpoint == 'sm' {
    @error '`#{$breakpoint}` is and invalid option. You probably mean `md`';
  }
  @if $breakpoint == 'md' {
    @media (max-width: map-get($breakpoints, 'sm') + px) {
      @content;
    }
  } @else if $breakpoint == 'lg' {
    @media (max-width: map-get($breakpoints, 'md') + px) {
      @content;
    }
  }
}
